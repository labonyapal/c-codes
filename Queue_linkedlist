//queue with linked list


//37
#include <iostream>
#include <string>

using namespace std;

struct ll{

struct node{
   node* next;
   int val;

};
   node* head= NULL;
       node* tail=NULL;

    void insert_last(int x){
    node* a=(node*)malloc(sizeof(node));
    a->next=NULL;
    a->val=x;
    if(head==NULL){
        head=a;
        tail=a;
    }
    else{
        tail->next=a;
        tail=a;
    }
    }

    int delete_first(){
    if(head==NULL){
        return -1;
    }
    else if(head==tail){
        int x=head->val;
        head=NULL;
        tail=NULL;
        //free(x);
        return -1;
    }
    else{
        int x=head->val;
        head=head->next;
       // free(x);
        return -1;
    }

    }

    void print(){
    node* b=head;
    while(b){
        cout<<b->val<<" "<<endl;
        b=b->next;
    }
    }
    int front_element(){//peak
    return this->head->val;
    }
};

int main(){
int n, i, num;
ll pak;
string s;
cin>>n;
for(i=1; i<=n; i++){
    cin>>num;
    pak.insert_last(num);
}
cout<<pak.front_element()<<endl<<endl;
pak.delete_first();

pak.print();
}
