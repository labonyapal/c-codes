#include <bits/stdc++.h>
using namespace std;

// Create a Binary Tree

/*        1
        /   \
       3     5
      / \    / \
     7  11  17  NULL
*/

// Node structure to represent each node in the binary tree
struct node {
    int num;       // Data stored in the node
    node *left;     // Pointer to the left child
    node *right;    // Pointer to the right child

    // Constructor to initialize the node with data
    node(int d) {
        num = d;
        left = NULL;
        right = NULL;
    }
};

// Function to build the binary tree
node *Tree(node *root) {
    //cout << "Enter the data: ";
    int num;
    cin >> num;

    // Create a new node with the input data
    root = new node(num);

    // Base case for recursion
    if (num == -1) {
        return NULL; // If data is -1, this node is NULL
    }

    // Recursively build the left and right subtrees

    root->left = Tree(root->left);


    root->right = Tree(root->right);

    return root; // Return the root of the subtree
}


int maxdepth(node* root)
{
    if(root==NULL)
        return 0;
    int lh=maxdepth(root->left);
    int rh=maxdepth(root->right);
    return 1+max(lh, rh);
}
int main() {
    node *root = NULL;

 
    root = Tree(root);
    cout<<maxdepth(root)<<endl;
  
    // Example input: 1 3 7 -1 -1 11 -1 -1 5 17 -1 -1 -1

   
  
    // Example output: 3

    return 0;
}
