#include <bits/stdc++.h>
using namespace std;

struct ll {
    struct node {
        node* next;
        int val;
    };

    node* head = NULL;
    node* tail = NULL;

    void insert_first(int x) {
        node* a = (node*)malloc(sizeof(node));
        a->val = x;
        a->next = head;
        head = a;
        if (tail == NULL) {
            tail = a;
        }
    }

    void print() {
        node* b = head;
        while (b) {
            cout << b->val << " ";
            b = b->next;
        }
        cout << endl;
    }

    void bubble_sort() {
        if (head == NULL) return; // If the list is empty, do nothing

        bool swapped = true;
        node* lptr = NULL;

        while (swapped) {
            swapped = false;
            node* ptr1 = head;

            while (ptr1->next != lptr) {
                if (ptr1->val > ptr1->next->val) {
                    // Swap the values
                    int temp = ptr1->val;
                    ptr1->val = ptr1->next->val;
                    ptr1->next->val = temp;
                    swapped = true;
                }
                ptr1 = ptr1->next;
            }
            lptr = ptr1; // Move lptr to one element before the end
        }
    }
};

int main() {
    ll pak;
    int n, i, num;
    cin >> n;
    for (i = 0; i < n; i++) {
        cin >> num;
        pak.insert_first(num);
    }
    pak.bubble_sort();
    pak.print();
    return 0;
}

